{
  "name": "Glide Bitmap Pool",
  "tagline": "Glide Bitmap Pool is a memory management library for reusing the bitmap memory",
  "body": "# Glide Bitmap Pool \r\n\r\n[![Android Arsenal](https://img.shields.io/badge/Android%20Arsenal-Glide%20Bitmap%20Pool-blue.svg?style=flat)](http://android-arsenal.com/details/1/3740)\r\n[![License](https://img.shields.io/badge/license-Apache%202.0-blue.svg)](https://github.com/amitshekhariitbhu/GlideBitmapPool/blob/master/LICENSE)\r\n\r\n<img src=https://raw.githubusercontent.com/amitshekhariitbhu/GlideBitmapPool/master/assets/glidebitmappool.png width=1000 height=140 />\r\n\r\n### About Glide Bitmap Pool\r\n\r\nGlide Bitmap Pool is a memory management library for reusing the bitmap memory. As it reuses bitmap memory , so \r\nno more GC calling again and again , hence smooth running application. It uses inBitmap while decoding the bitmap\r\non the supported android versions. All the version use-cases has been handled to optimize it better.\r\n\r\n* [Glide](https://github.com/bumptech/glide) , [Fresco](https://github.com/facebook/fresco) and [Android Networking](https://github.com/amitshekhariitbhu/Android-Networking) uses Bitmap Pool Concept to \r\nload images efficiently.\r\n\r\n### Why use this library ?\r\n\r\nAn Image heavy Application decodes many images , so there will be continuous allocation and deallocation \r\nof memory in application , and that results in very frequent calling of GC(Garbage Collector). And \r\nfinally because of very frequent calling of GC , the application UI freezes.\r\nUse Bitmap pool to avoid continuous allocation and deallocation of memory in application \r\nand reduce GC overhead that will result in smooth running application.\r\nSuppose we have to load few bitmap in Android Application.\r\nWhen we load bitmapOne , it will allocate the memory for bitmapOne.\r\nThen if we donâ€™t need bitmapOne , do not recycle bitmap (as if you recycle, it will make GC to be called) , \r\nso use this bitmapOne as an inBitmap for bitmapTwo so that , the same memory can be reused for bitmapTwo.\r\nIn this way , we can avoid continuous allocation and deallocation of memory in application and reduce GC overhead.\r\nBut the problem is that there are few restrictions as android version less than Honeycomb does not supports it , \r\nfew android version less than Kitkat only when we use inSampleSize = 1 , above that it supports \r\ncompletely and few other issues.\r\nSo , all these types of cases are handled in this library\r\n\r\n* [Detail Explanation can be found here](https://medium.com/@amitshekhar/how-to-use-bitmap-pool-in-android-56c71a55533c#.m41wqfk8h)\r\n\r\n#### GET RID OF : GC_FOR_ALLOC freed 1568K, 23% free 37664K/48844K, paused 141ms, total 143ms - (whenever you see this log , your application is lagging)\r\n\r\n<img src=https://raw.githubusercontent.com/amitshekhariitbhu/GlideBitmapPool/master/assets/gcsamplelog.png width=500 height=150 />\r\n\r\n## Requirements\r\n\r\nGlide Bitmap Pool can be included in any Android or Java application. \r\n\r\nGlide Bitmap Pool supports Android 2.3 (Gingerbread) and later. \r\n\r\n## Using Glide Bitmap Pool in your application\r\n\r\nAdd this in your build.gradle\r\n```groovy\r\ncompile 'com.amitshekhar.android:glide-bitmap-pool:0.0.1'\r\n```\r\nThen initialize it in onCreate() Method of application class, :\r\n```java\r\nGlideBitmapPool.initialize(10 * 1024 * 1024); // 10mb max memory size\r\n```\r\n\r\n### Decoding the bitmap from file path\r\n```java\r\nBitmap bitmap = GlideBitmapFactory.decodeFile(filePath);\r\n```\r\n\r\n### Decoding the bitmap from resources\r\n```java\r\nBitmap bitmap = GlideBitmapFactory.decodeResource(getResources(), R.drawable.testImage);\r\n```\r\n\r\n### Decoding the down sample bitmap\r\n```java\r\nBitmap bitmap = GlideBitmapFactory.decodeFile(filePath,100,100);\r\n```\r\n\r\n### Making the bitmap available for recycle or reuse\r\n```java\r\nGlideBitmapPool.putBitmap(bitmap);\r\n```\r\n\r\n### Getting the empty bitmap from the pool\r\n```java\r\nBitmap bitmap = GlideBitmapPool.getBitmap(width, height, config);\r\n```\r\n\r\n### Clearing or Trimming Memory\r\n```java\r\nGlideBitmapPool.clearMemory();\r\nGlideBitmapPool.trimMemory(level);\r\n```\r\n\r\n### Migrating to Glide Bitmap Pool\r\n```java\r\n// ------   decoding -------\r\n\r\n// old code \r\nBitmap bitmap = BitmapFactory.decodeResource(getResources(), R.drawable.test1);\r\n\r\n// new code \r\nBitmap bitmap = GlideBitmapFactory.decodeResource(getResources(), R.drawable.test1);\r\n\r\n// ------   recycling ------- \r\n\r\n// old code\r\nbitmap.recycle();\r\n\r\n// new code\r\nGlideBitmapPool.putBitmap(bitmap);\r\n\r\n//  ------   creating a bitmap -------\r\n\r\n// old code \r\nBitmap bitmap = Bitmap.create(width, height, config);\r\n\r\n// new code\r\nBitmap bitmap = GlideBitmapPool.getBitmap(width, height, config);\r\n```\r\n\r\n### Important\r\n```\r\n// Do not use bitmap.recycle();\r\n// use GlideBitmapPool.putBitmap(bitmap); as it will put bitmap in the pool for further reuse.\r\n\r\n// Do not use Bitmap.create(width, height, config);\r\n// use GlideBitmapPool.getBitmap(width, height, config); as it returns bitmap from the pool that can be reused.\r\n```\r\n\r\n### Credits and references\r\n* [Glide](https://github.com/bumptech/glide) - As it uses the same bitmap pool that is used by [Glide](https://github.com/bumptech/glide)\r\n* [Managing Bitmap Memory](https://developer.android.com/training/displaying-bitmaps/manage-memory.html)\r\n* [Loading Large Bitmaps Efficiently](https://developer.android.com/training/displaying-bitmaps/load-bitmap.html)\r\n\r\n### TODO\r\n* More Optimization with further updates.\r\n\r\n### Contact\r\n- [Twitter](https://twitter.com/amitiitbhu)\r\n- [Medium](https://medium.com/@amitshekhar)\r\n- [Facebook](https://www.facebook.com/amit.shekhar.iitbhu)\r\n\r\n### Have an issue or need a feature in Glide Bitmap Pool\r\n- Best way to do so is - [Create an issue](https://github.com/amitshekhariitbhu/GlideBitmapPool/issues/new)\r\n\r\n### License\r\n```\r\n   Copyright (C) 2016 Amit Shekhar\r\n   Copyright (C) 2011 Android Open Source Project\r\n\r\n   Licensed under the Apache License, Version 2.0 (the \"License\");\r\n   you may not use this file except in compliance with the License.\r\n   You may obtain a copy of the License at\r\n\r\n       http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n   Unless required by applicable law or agreed to in writing, software\r\n   distributed under the License is distributed on an \"AS IS\" BASIS,\r\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n   See the License for the specific language governing permissions and\r\n   limitations under the License.\r\n```\r\n\r\n### Contributing to Glide Bitmap Pool\r\nJust make pull request. You are in!",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}